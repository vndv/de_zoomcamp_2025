id: minio_taxi
namespace: zoomcamp
description: |
  The Parquet Data used in the course: https://github.com/DataTalksClub/nyc-tlc-data/releases

inputs:
  - id: taxi
    type: SELECT
    displayName: Select taxi type
    values: [yellow, green]
    defaults: green

variables:
  file: "{{inputs.taxi}}_tripdata_{{trigger.date | date('yyyy-MM')}}.parquet"
  minio_file: "{{kv('BUCKET_NAME')}}_{{vars.file}}"
  table: "{{kv('DATASET')}}.{{inputs.taxi}}_tripdata"
  data: "{{outputs.extract.outputFiles[inputs.taxi ~ '_tripdata_' ~ (trigger.date | date('yyyy-MM')) ~ '.parquet']}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.file)}}"
      taxi: "{{inputs.taxi}}"

  - id: extract
    type: io.kestra.plugin.scripts.shell.Commands
    outputFiles:
      - "*.parquet"
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    commands:
      - wget -qO- https://d37ci6vzurychx.cloudfront.net/trip-data/{{inputs.taxi}}_tripdata_{{trigger.date | date('yyyy-MM')}}.parquet > {{render(vars.file)}}

  - id: upload_to_minio
    type: io.kestra.plugin.minio.Upload
    accessKeyId: "{{kv('ACCESS_KEY_ID')}}"
    secretKeyId: "{{kv('SECRET_KEY_ID')}}"
    region: "{{kv('REGION')}}"
    endpoint: "{{kv('ENDPOINT_URL')}}"
    bucket: "{{kv('BUCKET_NAME')}}"
    from: "{{render(vars.data)}}"
    key: "{{inputs.taxi}}/{{render(vars.minio_file)}}"

  - id: create_database
    type: io.kestra.plugin.jdbc.clickhouse.Query
    sql: CREATE DATABASE IF NOT EXISTS bronze

  - id: if_green_taxi
    type: io.kestra.plugin.core.flow.If
    condition: "{{inputs.taxi == 'green'}}"
    then:
      - id: cl_green_tripdata
        type: io.kestra.plugin.jdbc.clickhouse.Query
        sql: |
          CREATE TABLE IF NOT EXISTS {{render(vars.table)}} (
          VendorID String,
          lpep_pickup_datetime String,
          lpep_dropoff_datetime String,
          store_and_fwd_flag String,
          RatecodeID String,
          PULocationID String,
          DOLocationID String,
          passenger_count String,
          trip_distance String,
          fare_amount String,
          extra String,
          mta_tax String,
          tip_amount String,
          tolls_amount String,
          ehail_fee String,
          improvement_surcharge String,
          total_amount String,
          payment_type String,
          congestion_surcharge String,
          trip_type String,
          trigger_month String DEFAULT '{{trigger.date | date('yyyy-MM')}}',
          load_date Date DEFAULT toDate(now())
          )
          ENGINE = S3(
          'http://object-store:9000/zoomcamp/{{inputs.taxi}}/*',
          '{{kv('ACCESS_KEY_ID')}}',
          '{{kv('SECRET_KEY_ID')}}',
          'Parquet'
          );

  - id: if_yellow_taxi
    type: io.kestra.plugin.core.flow.If
    condition: "{{inputs.taxi == 'yellow'}}"
    then:
      - id: cl_yellow_tripdata
        type: io.kestra.plugin.jdbc.clickhouse.Query
        sql: |
          CREATE TABLE IF NOT EXISTS {{render(vars.table)}} (
          VendorID String,
          tpep_pickup_datetime String,
          tpep_dropoff_datetime String,
          passenger_count String,
          trip_distance String,
          RatecodeID String,
          store_and_fwd_flag String,
          PULocationID String,
          DOLocationID String,
          payment_type String,
          fare_amount String,
          extra String,
          mta_tax String,
          tip_amount String,
          tolls_amount String,
          improvement_surcharge String,
          total_amount String,
          congestion_surcharge String,
          trigger_month String DEFAULT '{{trigger.date | date('yyyy-MM')}}',
          load_date Date DEFAULT toDate(now())
          )
          ENGINE = S3(
          'http://object-store:9000/zoomcamp/{{inputs.taxi}}/*',
          '{{kv('ACCESS_KEY_ID')}}',
          '{{kv('SECRET_KEY_ID')}}',
          'Parquet'
          );

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: If you'd like to explore Kestra outputs, disable it.
    disabled: false


pluginDefaults:
  - type: io.kestra.plugin.jdbc.clickhouse.Query
    values:
      url: jdbc:clickhouse://host.docker.internal:8123/
      username: default
      password: clickhouse_password

triggers:
  - id: green_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 9 1 * *"
    inputs:
      taxi: green

  - id: yellow_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 10 1 * *"
    inputs:
      taxi: yellow